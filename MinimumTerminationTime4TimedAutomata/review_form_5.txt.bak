<!--
  == For your convenience, this form can be processed by EasyChair
  == automatically. You can fill out this form offline and then upload it
  == to EasyChair. Several review forms can be uploaded simultaneously.
  == You can modify your reviews as many times as you want.
  == 
  == When filling out the review form please mind the following rules:
  == 
  == (1) Blocks such as this are comments. EasyChair will ignore them.
  ==     Do not write any text into these blocks as it will be ignored.
  ==     You can add comments to the review form or remove them.
  == (2) Write only into the tags where instructed. Do not modify any
  ==     tags and attributes, or the review will become unusable and will
  ==     be rejected by EasyChair.
  -->
<review id="2100934::978201"
        submission="5"
        title="Minimum Termination Time for Timed Automata Models with Infinite Cycles"
        authors="Omar Bataineh,
                 Mark Reynolds"
        pc_member="Grigore Rosu">
<score id="226607" name="Overall evaluation">
<!--
  == Select your choice from the options below and write its number below,
  == before the </score> tag.
  ==
  == 3 strong accept
  == 2 accept
  == 1 weak accept
  == 0 borderline paper
  == -1 weak reject
  == -2 reject
  == -3 strong reject
  -->
  1
</score>
<score id="226608" name="Reviewer's confidence">
<!--
  == Select your choice from the options below and write its number below,
  == before the </score> tag.
  ==
  == 5 (expert)
  == 4 (high)
  == 3 (medium)
  == 2 (low)
  == 1 (none)
  -->
  3
</score>
<!-- ======== Review ======== -->
<text id="226610" name="Review">
<!--
  == Please provide a detailed review, including justification for your
  == scores. This review will be sent to the authors unless the PC chairs
  == decide not to do so. This field is required unless you have an
  == attachment..
  -->
Summary:
This paper reported a non-termination problem of Behrmann et al's algorithm
for computing the minimum cost of reaching a goal state in priced timed
automata. The authors used concrete examples to show that in certain
circumstances, when infinite cycles exist, that algorithm may not terminate.
It is then pointed out the problem was caused by a canonicalization mistake
in the original algorithm. Finally, the authors proposed a modified algorithm,
where termination can be guaranteed for any arbitrary timed automata.

Strengths:
*  Generally speaking, this paper presents their achievements gradually in a 
reasonable order so that it makes the readers tend to believe the proposed new 
extrapolation and canonicalization operations really improve the previous
algorithm of computing BCET (best-case execution time). 

*  Some diagram not only increases the readability, but also makes it
easier for future internal reference. For example, in the third part,
a matrix composed of dot sign (.) and asterisk sign (*) is presented to
denote the general form of partial extrapolated matrix. This representation 
makes very clear distinction between the "extra clock entries" that are not
touched during extrapolation process, and the entries only involve automata
clocks which may be extrapolated. Later in the paper, the entries with 
certain properties can be easily referenced by either "dot entries" or
"asterisk entries", which is very concise.

Weaknesses:
* Not enough experiments. At the end, the paper claims it can compute correctly
the best-case execution time and terminates successfully when verifying the 
three examples where the original algorithm cannot terminate. However, to make
the results more convincing, more tests of different kinds are needed.

* No evaluation. There is no evaluation part. It is a little unfair to only 
compare the modified algorithm with original one in cases where infinite cycles
exist. Does the new algorithm also outperform the old one when there is no
infinite cycles? Whether the new algorithm achieves its always-termination
feature at the cost of more overheads?

Some minor issues:
The term 'canonicalization' occurs many times throughout the paper. 
But no clear explanation or examples of canonicalization operation are given
until the part 3. In contrast, the extrapolation operation is given formal
definition in part 2.

In Theorem 1, it claims its algorithm for best-case execution time computes
the least upper bound on execution times. This seems counter-intuitive
and inconsistent with the previous definition of best-case execution time
in part two.

Typo in page 2 (before part 2): should be `The latter` instead of `The later`.

</text>
<text id="226611" name="Confidential remarks for the program committee">
<!--
  == If you wish to add any remarks intended only for PC members, please
  == write them below. These remarks will only be seen by the PC members
  == having access to reviews for this submission. They will not be sent to
  == the authors. This field is optional..
  -->






</text>
<reviewer>
  <first_name> He </first_name>
  <last_name>  Xiao </last_name>
  <email> hexiao2@illinois.edu </email>
</reviewer>
</review>
